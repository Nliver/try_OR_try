var (
	isSliced bool
)

func throwLife() {
	setXYpos rand(-200, 200), -200
	show
	isSliced = false
	// 向上抛物运动
	setPhysicsMode DynamicPhysics
	setGravity 1.5
	addImpulse rand(-900, 900), rand(-3500, -6000)
}

func collectLife() {
	if isSliced {
		return // 避免重复收集
	}

	isSliced = true
	broadcast "gainLife" // 增加生命值

	// 停止物理运动
	setPhysicsMode NoPhysics

	// 收集特效：快速放大并发光
	setGraphicEffect BrightnessEffect, 150

	// 放大动画
	changeSize 1
	wait 0.1

	// 消失
	die
}

onStart => {
	hide // 隐藏初始精灵
}

onCloned => {
	// 抛出的生命值道具
	if costumeName == "life" {
		throwLife

		// 检测刀光轨迹的循环
		forever => {
			// 只有在可见、未被切割、且在屏幕内时才检测
			if visible && !isSliced && ypos > -250 && ypos < 250 {
				if mousePressed {
					// 计算鼠标与水果的距离
					distance := distanceTo(Mouse)
					if distance < 25 {
						// 如果鼠标在水果附近
						play "Sound_of_restoration"
						collectLife
					}
				}
			}

			// 如果已被切割或飞出屏幕，停止检测
			if isSliced || ypos < -250 {
				return
			}

			wait 0.01
		}
	}
}
